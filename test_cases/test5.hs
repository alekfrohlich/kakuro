-- test case 2 (10x12).

module TestCases (height, width, kakuroBoard) where

height :: Int
height = 10         -- Board height.

width :: Int
width  = 12         -- Board width.  

kakuroBoard :: [[(Int, Int, Int)]]
kakuroBoard = [[(0,0,0), (0,14,0), (0,29,0), (0,10,0), (0,0,0), (0,0,0), (0,0,0), (0,24,0), (0,16,0), (0,22,0), (0,0,0), (0,0,0)]
                ,[(0,0,23), (1,0,0), (1,0,0), (1,0,0), (0,3,0), (0,0,0), (0,12,24), (1,0,0), (1,0,0), (1,0,0), (0,24,0), (0,0,0)]
                ,[(0,0,11), (1,0,0), (1,0,0), (1,0,0), (1,0,0), (0,6,34), (1,0,0), (1,0,0), (1,0,0), (1,0,0), (1,0,0), (0,17,0)]
                ,[(0,0,13), (1,0,0), (1,0,0), (0,39,16), (1,0,0), (1,0,0), (1,0,0), (1,0,0), (0,9,19), (1,0,0), (1,0,0), (1,0,0)]
                ,[(0,0,0), (0,0,16), (1,0,0), (1,0,0), (0,4,3), (1,0,0), (1,0,0), (0,7,29), (1,0,0), (1,0,0), (1,0,0), (1,0,0)]
                ,[(0,0,0), (0,4,0), (0,7,8), (1,0,0), (1,0,0), (1,0,0), (0,10,7), (1,0,0), (1,0,0), (1,0,0), (0,10,0), (0,0,0)]
                ,[(0,0,10), (1,0,0), (1,0,0), (1,0,0), (1,0,0), (0,6,4), (1,0,0), (1,0,0), (0,4,3), (1,0,0), (1,0,0), (0,15,0)]
                ,[(0,0,11), (1,0,0), (1,0,0), (1,0,0), (0,4,11), (1,0,0), (1,0,0), (1,0,0), (1,0,0), (0,4,11), (1,0,0), (1,0,0)]
                ,[(0,0,0), (0,0,16), (1,0,0), (1,0,0), (1,0,0), (1,0,0), (1,0,0), (0,0,11), (1,0,0), (1,0,0), (1,0,0), (1,0,0)]
                ,[(0,0,0), (0,0,0), (0,0,13), (1,0,0), (1,0,0), (1,0,0), (0,0,0), (0,0,0), (0,0,7), (1,0,0), (1,0,0), (1,0,0)]]